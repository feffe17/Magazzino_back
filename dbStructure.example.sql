-- -- ctrl + a to select all
-- -- ctrl + ù to uncomment all
-- -- ctrl + alt + e to exec your query

-- -- NUOVA STRUTTURA DB
-- DROP DATABASE IF EXISTS magazzino;
-- CREATE DATABASE magazzino;
--  USE magazzino;

-- -- TABELLA UTENTI
-- CREATE TABLE Users (
--     ID INT AUTO_INCREMENT,
--     Username VARCHAR(20) NOT NULL UNIQUE,
--     Nome VARCHAR(50) NOT NULL,
--     Cognome VARCHAR(50) NOT NULL,
--     Email VARCHAR(100) NOT NULL UNIQUE,
--     Password VARCHAR(255) NOT NULL,
--     PRIMARY KEY (ID)
-- );

-- -- TABELLA MAGAZZINI
-- CREATE TABLE Magazzini (
--     ID INT AUTO_INCREMENT,
--     NomeMagazzino VARCHAR(50) NOT NULL,
--     UserID INT NOT NULL, -- Riferimento all'utente che possiede il magazzino
--     PRIMARY KEY (ID),
--     FOREIGN KEY (UserID) REFERENCES Users(ID)
--     ON DELETE CASCADE ON UPDATE CASCADE
-- );

-- -- TABELLA MATERIALE
-- CREATE TABLE Materiale (
--     ID INT AUTO_INCREMENT,
--     Item VARCHAR(50) NOT NULL,
--     Descrizione VARCHAR(255),
--     Utilizzabili INT DEFAULT 0,
--     Guasti INT DEFAULT 0,
--     MagazzinoID INT NOT NULL, -- Riferimento al magazzino
--     PRIMARY KEY (ID),
--     FOREIGN KEY (MagazzinoID) REFERENCES Magazzini(ID)
--     ON DELETE CASCADE ON UPDATE CASCADE,
--     UNIQUE (MagazzinoID, Item) -- Garantisce l'unicità dell'item all'interno di un magazzino
-- );

-- -- TABELLA PERMESSI
-- CREATE TABLE Permessi (
--     ID INT AUTO_INCREMENT,
--     UserID INT NOT NULL, -- Utente a cui sono assegnati i permessi
--     MagazzinoID INT NOT NULL, -- Magazzino su cui si applicano i permessi
--     Ruolo ENUM('Admin', 'Mod', 'User') NOT NULL, -- Ruolo specifico per il magazzino
--     PRIMARY KEY (ID),
--     FOREIGN KEY (UserID) REFERENCES Users(ID)
--     ON DELETE CASCADE ON UPDATE CASCADE,
--     FOREIGN KEY (MagazzinoID) REFERENCES Magazzini(ID)
--     ON DELETE CASCADE ON UPDATE CASCADE,
--     UNIQUE (UserID, MagazzinoID) -- Un utente può avere un solo ruolo per ogni magazzino
-- );
